// Copyright 2003-2004 The Apache Software Foundation.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * This file was auto-generated by the Axis C++ Web Service Generator (WSDL2Ws)
 * This file contains Client Stub Class for remote web service 
 */

#if !defined(__INTEROPTESTPORTTYPE_CLIENTSTUB_H__INCLUDED_)
#define __INTEROPTESTPORTTYPE_CLIENTSTUB_H__INCLUDED_

#include <axis/client/Stub.hpp>
#include <axis/SoapFaultException.hpp>
#include <axis/ISoapFault.hpp>
AXIS_CPP_NAMESPACE_USE
#include "SOAPStruct_Array.hpp"
#include "SOAPStruct.hpp"

class InteropTestPortType :public Stub
{
public:
	STORAGE_CLASS_INFO InteropTestPortType(const char* pchEndpointUri, AXIS_PROTOCOL_TYPE eProtocol=APTHTTP1_1);
	STORAGE_CLASS_INFO InteropTestPortType();
public:
	STORAGE_CLASS_INFO virtual ~InteropTestPortType();
public: 
	STORAGE_CLASS_INFO xsd__string echoString(xsd__string Value0);
	STORAGE_CLASS_INFO xsd__string_Array echoStringArray(xsd__string_Array Value0);
	STORAGE_CLASS_INFO xsd__int echoInteger(xsd__int Value0);
	STORAGE_CLASS_INFO xsd__int_Array echoIntegerArray(xsd__int_Array Value0);
	STORAGE_CLASS_INFO xsd__float echoFloat(xsd__float Value0);
	STORAGE_CLASS_INFO xsd__float_Array echoFloatArray(xsd__float_Array Value0);
	STORAGE_CLASS_INFO SOAPStruct* echoStruct(SOAPStruct* Value0);
	STORAGE_CLASS_INFO SOAPStruct_Array echoStructArray(SOAPStruct_Array Value0);
	STORAGE_CLASS_INFO void echoVoid();
	STORAGE_CLASS_INFO xsd__base64Binary echoBase64(xsd__base64Binary Value0);
	STORAGE_CLASS_INFO xsd__dateTime echoDate(xsd__dateTime Value0);
	STORAGE_CLASS_INFO xsd__hexBinary echoHexBinary(xsd__hexBinary Value0);
	STORAGE_CLASS_INFO xsd__decimal echoDecimal(xsd__decimal Value0);
	STORAGE_CLASS_INFO xsd__boolean echoBoolean(xsd__boolean Value0);
};

#endif /* !defined(__INTEROPTESTPORTTYPE_CLIENTSTUB_H__INCLUDED_)*/
