///////////////////////////////////////////////////////////////////////////////////
//This file is automatically generated by the Axis C++ Wrapper Class Generator
//Web service wrapper class's implementation generated by Axis WCG
//Parameters and wrapper methos to manipulate SOAPArrayStruct
////////////////////////////////////////////////////////////////////////////////////

#include "SOAPArrayStruct.h"
#include <axis/common/AxisWrapperAPI.h>

/////////////////////////////////////////////////////////////////////////////
// This static method serialize a SOAPArrayStruct type of object
//////////////////////////////////////////////////////////////////////
int Axis_Serialize_SOAPArrayStruct(SOAPArrayStruct* param, IWrapperSoapSerializer* pSZ, bool bArray = false)
{
	if (bArray)
	{
		pSZ->Serialize("<", Axis_TypeName_SOAPArrayStruct, ">", NULL);
	}
	else
	{
		const AxisChar* sPrefix = pSZ->GetNamespacePrefix(Axis_URI_SOAPArrayStruct);
		pSZ->Serialize("<", Axis_TypeName_SOAPArrayStruct, " xsi:type=\"", sPrefix, ":",
			Axis_TypeName_SOAPArrayStruct, "\" xmlns:", sPrefix, "=\"",
			Axis_URI_SOAPArrayStruct, "\">", NULL);
	}

	pSZ->SerializeAsElement("varString", (void*)&(param->varString), XSD_STRING);
	pSZ->SerializeAsElement("varInt", (void*)&(param->varInt), XSD_INT);
	pSZ->SerializeAsElement("varFloat", (void*)&(param->varFloat), XSD_FLOAT);
	pSZ->SerializeBasicArray((Axis_Array*)(&param->varArray),XSD_STRING, "varArray");
	pSZ->Serialize("</", Axis_TypeName_SOAPArrayStruct, ">", NULL);
	return AXIS_SUCCESS;
}

/////////////////////////////////////////////////////////////////////////////
// This static method deserialize a SOAPArrayStruct type of object
//////////////////////////////////////////////////////////////////////
int Axis_DeSerialize_SOAPArrayStruct(SOAPArrayStruct* param, IWrapperSoapDeSerializer *pIWSDZ)
{
	param->varString = pIWSDZ->GetElementAsString(0,0);
	param->varInt = pIWSDZ->GetElementAsInt(0,0);
	param->varFloat = pIWSDZ->GetElementAsFloat(0,0);
	param->varArray = (ArrayOfstring&)pIWSDZ->GetBasicArray(XSD_STRING,0,0);
	return AXIS_SUCCESS;
}
void* Axis_Create_SOAPArrayStruct(void* pObj, bool bArray = false, int nSize=0)
{
	if (bArray && (nSize > 0))
		return new SOAPArrayStruct[nSize];
	else
		return new SOAPArrayStruct;
}

SOAPArrayStruct::~SOAPArrayStruct()
{
	free(varString);
	delete varArray.m_Array;
}
/////////////////////////////////////////////////////////////////////////////
// This static method delete a SOAPArrayStruct type of object
//////////////////////////////////////////////////////////////////////
void Axis_Delete_SOAPArrayStruct(SOAPArrayStruct* param, bool bArray = false, int nSize=0)
{
	if (bArray)
	{
		delete [] param;
	}
	else
	{
		delete param;
	}
}
/////////////////////////////////////////////////////////////////////////////
// This static method gives the size of SOAPArrayStruct type of object
//////////////////////////////////////////////////////////////////////
int Axis_GetSize_SOAPArrayStruct()
{
	return sizeof(SOAPArrayStruct);
}
