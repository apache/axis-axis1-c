<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<HTML>
<HEAD>
  <META name="generator" content=
  "HTML Tidy for Windows (vers 1st October 2003), see www.w3.org">
  <LINK href="axis.css" rel="stylesheet" type="text/css">
  <STYLE type="text/css">
    small.red { color: red }
  </STYLE>

  <TITLE>Axis requirements &amp; status</TITLE>
</HEAD>

<BODY>
  <H1>Requirements</H1>

  <P>There is a <A href="#nonreq">non-requirements</A> section
  below.<BR>
  <A href="#releases">Release cycles</A> are explained below.</P>

  <TABLE border="3" cellspacing="0" cellpadding="3" width="700">
    <TBODY>
      <TR valign="top">
        <TH>No.</TH>

        <TH>Description [Priority]</TH>

        <TH><BR>
        <BR></TH>

        <TD valign="top"><B>status</B> - worker(s)<BR></TD>

        <TH>a1</TH>

        <TH>a2</TH>

        <TH>
          <P>beta/</P>

          <P>3.0</P>
        </TH>

        <TH>later</TH>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">XML Protocol compliance</TH>
      </TR>

      <TR valign="top">
        <TD>10</TD>

        <TD>We will diligently track the XP protocol as it evolves,
        and support it when it's ready.</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">n/a<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Error and fault handling</TH>
      </TR>

      <TR valign="top">
        <TD>20</TD>

        <TD>Specify an extensible Java Exception mapping into SOAP
        faults</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>21</TD>

        <TD>Specify an extensible SOAP fault mapping into Java
        exceptions</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Service and Operation Identification</TH>
      </TR>

      <TR valign="top">
        <TD>30</TD>

        <TD>Dispatch by transport URL</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>31</TD>

        <TD>Dispatch by SOAPAction</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>32</TD>

        <TD>Dispatch by QName of the first body entry</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>33</TD>

        <TD>Dispatch by a custom handler <I>(to use any information
        available)</I></TD>

        <TD><BR></TD>

        <TD valign="top">done (can do it already)<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Message exchange patterns supported at the
        client API level</TH>
      </TR>

      <TR valign="top">
        <TD><BR></TD>

        <TD colspan="7"><I>Motivation: we believe the following
        message exchange patterns are in common use and important
        to implement (e.g. WSDL uses them)</I></TD>
      </TR>

      <TR valign="top">
        <TD>40</TD>

        <TD>Synchronous request/response</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>41</TD>

        <TD>One-way messaging</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>42</TD>

        <TD>[??] Asynchronous request/response (non-blocking)
        <I>(the question marks mean we don't know whether to
        provide this)</I></TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI -</B> ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">SOAP 1.1 compliance</TH>
      </TR>

      <TR valign="top">
        <TD>50</TD>

        <TD>All aspects of SOAP 1.1 supported by Apache SOAP
        2.x</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">what is missing?<BR>
        (actor, full sec-5)</TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>51</TD>

        <TD>Support intermediaries</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - RobJ<BR>
        <BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>52</TD>

        <TD>Transparency should be provided when we place
        intermediaries (hosts) between requestor and provider
        (creating a proxy server)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - RobJ<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>53</TD>

        <TD>Support the SOAP concept of mustUnderstand headers</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>54</TD>

        <TD>Support the SOAP actor header attributes</TD>

        <TD><BR></TD>

        <TD valign="top"><STRONG>NYI - Glen</STRONG><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Performance</TH>
      </TR>

      <TR valign="top">
        <TD>60</TD>

        <TD>The architecture must not require the whole message to
        be in memory at the same time</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">not for 1.0 - no incremental 1.0 parse;
        architecture still allows this, later<BR>
        <BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>61</TD>

        <TD>Scalable</TD>

        <TD><BR></TD>

        <TD valign="top">? - Sam<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>62</TD>

        <TD>Faster than Apache SOAP 2.x</TD>

        <TD><BR></TD>

        <TD valign="top">done!<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>63</TD>

        <TD>Must not be significantly slower than comparable
        alternative implementations</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Administration and monitoring</TH>
      </TR>

      <TR valign="top">
        <TD>70</TD>

        <TD>Logging API</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI (all)</B></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>71</TD>

        <TD>Metrics API</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>72</TD>

        <TD>Management (JMX) API</TD>

        <TD><BR></TD>

        <TD valign="top"><B>n/a?</B></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>73</TD>

        <TD>Run-time (un)deployment API</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Deployment</TH>
      </TR>

      <TR valign="top">
        <TD>80</TD>

        <TD>Installation and deployment of both the engine,
        components, and services should be simple</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done! (what more?)<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>81</TD>

        <TD>Support a WebServiceArchive format which associates the
        executable and the description files</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">NYI (does JWS count?) - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>82</TD>

        <TD>Support .asmx-like drop-in service deployment</TD>

        <TD><BR></TD>

        <TD valign="top">done - this is JWS<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>83</TD>

        <TD>A single SUPER TINY .jar file must be enough for a
        client to communicate via SOAP</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - what is best way to build
        it?<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>84</TD>

        <TD>Defaults packaged with both client and server must be
        sane, secure and ready to go</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> but getting there!<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>85</TD>

        <TD>Intermediaries (hosts) should be easy to configure</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - RobJ<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR>
        <TD valign="top">86<BR></TD>

        <TD valign="top">WSDD implementation<BR></TD>

        <TD valign="top"><BR></TD>

        <TD valign="top"><B>NYI</B> - Carl W / Glen</TD>

        <TD valign="top"><BR></TD>

        <TD valign="top"><BR></TD>

        <TD valign="top">?<BR></TD>

        <TD valign="top"><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Providers</TH>
      </TR>

      <TR valign="top">
        <TD>90</TD>

        <TD>Pluggable provider API</TD>

        <TD><BR></TD>

        <TD valign="top"><B>done? (handler API)</B></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>91</TD>

        <TD>Java provider</TD>

        <TD><BR></TD>

        <TD valign="top">done?<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>92</TD>

        <TD>BSF provider</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI -</B>?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>93</TD>

        <TD>EJB provider</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI -</B> ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>94</TD>

        <TD>COM provider</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR>
        <TD valign="top">95new<BR></TD>

        <TD valign="top">App server provider / connectivity layer
        <B>[High]</B><BR></TD>

        <TD valign="top"><BR></TD>

        <TD valign="top"><B>NYI</B> - Glen?<BR></TD>

        <TD valign="top"><BR></TD>

        <TD valign="top"><BR></TD>

        <TD valign="top">X<BR></TD>

        <TD valign="top"><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Pluggable XML protocol support</TH>
      </TR>

      <TR valign="top">
        <TD>100</TD>

        <TD>SOAP 1.1</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>101</TD>

        <TD>SOAP 1.2</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><STRONG>Partial -</STRONG> doesn't yet do
        envelope versioning or namespaces</TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>102</TD>

        <TD>Must not name general classes as SOAPWhateverDoer</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>103</TD>

        <TD>Simultaneous support for multiple message
        protocols</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">NYI<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Message processing</TH>
      </TR>

      <TR valign="top">
        <TD>110</TD>

        <TD>Support a flexible and extensible system allowing
        message handlers (extensions, applications) to build up
        orthogonal pieces of a message</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>111</TD>

        <TD>Handler invocation order is always deterministic for a
        given server configuration and message</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>112</TD>

        <TD>Some information should be shared between all the
        handlers in the "chain" on one host - MessageContext</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>112a</TD>

        <TD>Have the ability to specify application-specific
        parameters (like username or other thing) in the
        context</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>112b</TD>

        <TD>Some encapsulation of the idea of a session that's
        transport-independent (cookies in the
        HTTPRequest/HTTPResponse for http)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>112b.1</TD>

        <TD>An example/sample for a SOAP session
        header/handler/supplier</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - RobJ<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>112b.2</TD>

        <TD>Client code needs to support this as well - need to
        pass session back across if necessary...</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - RobJ<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>113</TD>

        <TD>Handlers need to be allowed to reach raw message
        data</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Transport</TH>
      </TR>

      <TR valign="top">
        <TD>120</TD>

        <TD>Pluggable transport API</TD>

        <TD><BR></TD>

        <TD valign="top">done - needs doc!</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>121</TD>

        <TD>HTTP listener and sender</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>122</TD>

        <TD>HTTPS listener and sender</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>123</TD>

        <TD>SMTP sender</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>124</TD>

        <TD>POP3 poller</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>125</TD>

        <TD>JMS listener and sender</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>126</TD>

        <TD>Support for "SOAP messages with
        attachments"<B>[High]</B> &nbsp; &nbsp;</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - Glen / RobJ<BR></TD>

        <TD><BR>
        <BR></TD>

        <TD>X<BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>127</TD>

        <TD>The transport can insert arbitrary transport-specific
        stuff into the Context</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>128</TD>

        <TD>The transport-specific stuff should be encapsulated,
        most of the engine should work on a canonical form of the
        message</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Security</TH>
      </TR>

      <TR valign="top">
        <TD>130</TD>

        <TD>Support transport-level security <B>[High]</B></TD>

        <TD><BR></TD>

        <TD valign="top"><B>NY</B><B>I</B> - per-transport
        issue?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR>
        <TD valign="top">130b<BR></TD>

        <TD valign="top">Support SOAP-level security
        <B>[High]</B><BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top">what, specifically? - Yuhichi?<BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top"><BR>
        <BR></TD>
      </TR>

      <TR valign="top">
        <TD>131</TD>

        <TD>HTTP Basic auth</TD>

        <TD><BR></TD>

        <TD valign="top">done?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>132</TD>

        <TD>Support for existing security SOAP-level standards</TD>

        <TD><BR></TD>

        <TD valign="top">what, specifically?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>133</TD>

        <TD>An example/sample for a SOAP Basic Authentication
        header/handler</TD>

        <TD><BR></TD>

        <TD valign="top">done?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Service Description and Discovery (for
        instance, WSDL, DISCO)</TH>
      </TR>

      <TR valign="top">
        <TD>140</TD>

        <TD>Support the ability to query a service's description at
        runtime (e.g. GET ...?wsdl)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - Jim's contribution? or is
        this something simpler?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>140a</TD>

        <TD>If deployment params have altered the service
        description, the updated version must be returned</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B>?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>141</TD>

        <TD>Support a basic html page describing the service (via
        an HTTP GET)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - James? Doug?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>142</TD>

        <TD>Support a pretty html page describing the service (via
        an HTTP GET)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI -</B> James? Doug?</TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>143</TD>

        <TD>Services can be deployed and used without service
        descriptions</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>144</TD>

        <TD>Should abstract the SD layer, at least by keeping the
        interfaces clean <B>[High]</B></TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>144a</TD>

        <TD>The abstract SD layer must support run-time
        determination of xsi:types of parts of the message</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI?</B> - Sam?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>144b</TD>

        <TD>Include a WSDL implementation of the SD layer
        <B>[High]</B> &nbsp; &nbsp;</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - Lance &amp; HP
        contribution?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>144c</TD>

        <TD>Extend WSDL with information on where to get components
        for stuff</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - James?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>144d</TD>

        <TD>Tools and/or run-time support for proxy generation from
        WSDL and/or WSDD</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - Lance &amp; HP?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>145</TD>

        <TD>HTTP GET on the Axis node returns an appropriate DISCO
        document</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Platforms</TH>
      </TR>

      <TR valign="top">
        <TD>150</TD>

        <TD>Java implementation</TD>

        <TD><BR></TD>

        <TD valign="top">underway :-)<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>151</TD>

        <TD>C++ implementation</TD>

        <TD><BR></TD>

        <TD valign="top">n/a for 1.0<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>151a</TD>

        <TD>C++ impl core should be cross platform with
        platform-specific extensions (like COM)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">n/a for 1.0<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>152</TD>

        <TD>All implementations should have as much in common as
        possible</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">n/a for 1.0<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>153</TD>

        <TD>Use standard APIs wherever possible</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Data Encoding</TH>
      </TR>

      <TR valign="top">
        <TD>160</TD>

        <TD>Extensible support for encodings</TD>

        <TD><BR></TD>

        <TD valign="top">NYI<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>161</TD>

        <TD>Implement basic SOAP encoding (the level of current
        Apache SOAP 2.x)</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>162</TD>

        <TD>Support for sparse and partially-transmitted
        arrays</TD>

        <TD><BR></TD>

        <TD valign="top">NYI<BR></TD>

        <TD><BR></TD>

        <TD>X<BR></TD>

        <TD>X</TD>

        <TD>&nbsp;</TD>
      </TR>

      <TR valign="top">
        <TD>163</TD>

        <TD>Support for multidimensional arrays</TD>

        <TD><BR></TD>

        <TD valign="top">NYI<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR valign="top">
        <TD>164</TD>

        <TD>Support literal XML encoding</TD>

        <TD><BR></TD>

        <TD valign="top">NYI<BR></TD>

        <TD><BR></TD>

        <TD>X<BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>165</TD>

        <TD>It should be relatively easy to write a
        "Serializer"</TD>

        <TD><BR></TD>

        <TD valign="top">done (depending on feedback from
        users)<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>166</TD>

        <TD>Include some general (de)serializers (that handle
        multiple types), so that there needn't exist a
        (de)serializer for every type that could possibly travel
        over the wire (needs further discussion - isomorphism
        (roundtrip) issues)</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">Is this the beanserializer /
        basicDeserializer, or something else?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>167</TD>

        <TD>(De)serialization may occur at any time on demand</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>168</TD>

        <TD>(De)serialization should be available to the
        application</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Release</TH>
      </TR>

      <TR valign="top">
        <TD><BR></TD>

        <TD colspan="7"><I>Although these are a 1.0 requirements,
        significant progress must be made on these items during
        interim releases.</I></TD>
      </TR>

      <TR valign="top">
        <TD>170</TD>

        <TD>Product-level code</TD>

        <TD><BR></TD>

        <TD valign="top">getting there....<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>171</TD>

        <TD>Product-level docs <B>[High]</B></TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>172</TD>

        <TD>Product-level examples</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> but getting there -
        everyone<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>173</TD>

        <TD>Product-level performance</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - Sam?</TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>174</TD>

        <TD>Product-level testing</TD>

        <TD><BR></TD>

        <TD valign="top">getting there, with functional &amp; unit
        tests<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Migration from Apache SOAP 2.x</TH>
      </TR>

      <TR valign="top">
        <TD>180</TD>

        <TD>Documentation</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI -</B> ?<BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>181</TD>

        <TD>The legacy Call object</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>182</TD>

        <TD>Serialization, custom serializers - maybe wrappers</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>?</TD>

        <TD>?</TD>
      </TR>

      <TR valign="top">
        <TD>183</TD>

        <TD>Support for legacy messaging services</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - which?<BR>
        <BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>184</TD>

        <TD>Support for legacy providers <B>[Medium]</B> &nbsp;
        &nbsp;</TD>

        <TD><BR></TD>

        <TD valign="top"><B>NYI</B> - ?<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>
      </TR>

      <TR>
        <TD valign="top">185new<BR></TD>

        <TD valign="top">Support for legacy deployment<BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - James?<BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top"><BR>
        <BR></TD>

        <TD valign="top">X<BR>
        <BR></TD>

        <TD valign="top"><BR>
        <BR></TD>
      </TR>

      <TR valign="top">
        <TH><BR></TH>

        <TH colspan="7">Coding</TH>
      </TR>

      <TR valign="top">
        <TD>190</TD>

        <TD>Follow the <A href=
        "http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html">
        Java Coding Style</A> with <B>no</B> tab characters.</TD>

        <TD><BR></TD>

        <TD valign="top">done<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>191</TD>

        <TD>Use javadoc style to document all non-private methods
        in commits.</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">could be more...<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>192</TD>

        <TD>Document packages.</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top">could be MUCH more...<BR></TD>

        <TD><BR></TD>

        <TD><BR></TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>

      <TR valign="top">
        <TD>193</TD>

        <TD>Committing a new package, at least place in a
        placeholder for the package doc that says "this is to be
        done".</TD>

        <TD><BR>
        <BR></TD>

        <TD valign="top"><B>NYI</B> - everyone!!!<BR></TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD>X</TD>

        <TD><BR></TD>
      </TR>
    </TBODY>
  </TABLE>

  <P><A name="nonreq"></A></P><BR>

  <H1>Non-requirements (won't be supported)</H1>

  <P><BR>
  <I>We find the SOAP spec. to be unclear on these issues so we
  decided not to support them.</I></P>

  <OL>
    <LI>RPC calls in SOAP headers</LI>

    <LI>Multiple RPC calls in a single SOAP message</LI>
  </OL>

  <P><A name="releases"></A></P>

  <H1>Releases and test cycles</H1>

  <P>We're planning on releasing alpha1 (a1),&nbsp;alpha2 (a2),
  beta, and 3.0.<BR>
  alpha&nbsp;is a preview.<BR>
  subsequent alphas&nbsp;are to show the growing set of features
  and docs and test cases and all that.<BR>
  Beta is functionally complete.</P>
</BODY>
</HTML>
