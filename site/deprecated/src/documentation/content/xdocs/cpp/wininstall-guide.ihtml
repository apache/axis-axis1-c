<html>
<head>


 <meta http-equiv="Content-Type" content="text/html">


<title>Windows Installation guide for Axis C++</title>
</head>

<body>


<h1>Windows Installation guide for Axis C++</h1>



<p>This document contains how to use the binary distribution of Axis C++.
These binaries have been tested on following Microsoft platforms,

<br>
Windows 2000 Professional

<br>
Windows XP 2002 Professional</p>

<p></p>



<h1>Contents</h1>

1. <a href="#dist">What binary distribution contains</a>

<br>
2. <a href="#apache">Installation with Apache 1.3.x/2.x web server</a>

<br>
3. <a href="#simpleaxis">Installation with Simple Axis Server</a>

<br>
4. <a href="#samples">Running provided samples</a>

<br>
5. <a href="#playsamples">Using Visual C++ to play with provided samples.
</a>

<br>
6. <a href="#writews">Writing your web services and client applications using
Axis C++.</a><br>


<p><a name="dist"></a></p>



<h1>What binary distribution contains</h1>



<p>1. There is a folder called "binary".<br>


<br>
2. Inside this there are several folders named as follows, <br>
-&gt; bin<br>
-&gt; deploy<br>
-&gt; docs <br>
-&gt; include<br>
-&gt; lib<br>
-&gt; samples<br>


<br>
3. The folder "bin" contains the following executables and dll's

<br>
Executables<br>
-&gt; AdminClient.exe (soap client to Deploy or Undeploy a web service)
<br>
-&gt; base.exe (soap client for Interop base tests)

<br>
-&gt; groupB.exe (soap client for Interop groupB tests)

<br>
-&gt; SimpleAxisServer.exe (axis with a simple http server)
<br>
-&gt; Calculator.exe (soap client for calculator sample)
<br>
-&gt; cbase.exe (soap client for c interop base sample)
<br>
-&gt; cgroupB.exe (soap client for c interop groupb sample)

<br>
-&gt; doclitbase.exe (soap client for document literal interopbase sample)
<br>
-&gt; doclitgroupB.exe (soap client for document literal interopgroupb sample)

<br>
<br>
DLL's<br>
-&gt; mod_axis.dll (axis module for apache 1.3.x http server) or

<br>
-&gt; mod_axis2.dll (axis module for apache 2.x http server)

</p>

<p>

<br>
4. Inside the "deploy" folder follwing sub folders exists 

<br>
-&gt; conf - This includes the server.wsdd, which is the deployment descriptor used 
for deploying services.

<br>
-&gt; handlers - This includes following DLL's,

<br>
- echoStringHeaderHandler.dll

<br>
- testhandler1.dll
<br>
-&gt; libs - Contains following dlls which are needed by axis.

<br>
-AxisServer.dll

<br>
-&gt; logs - Directory for logs<br>

<br>
<br>
-&gt; webservices - (contains sample web services that can be deployed with Axis C++)

<br>- AdminService.dll (interop groupb sample web service)
<br>- base.dll (interop base sample web service)
<br>- Calculator.dll (sample Calculator web service)
<br>- cbase.dll (sample interop c base web service)
<br>- cGroupB.dll (sample interop c groupB web service)
<br>- doclitbase.dll (sample interop doclitbase web service)
<br>- doclitgroupB.dll (sample interop doclitgroupB web service)
<br>- groupB.dll (sample interop groupB web service)
<br>

<br>
-&gt; wsdls - Contains the following wsdls
<br>AxisAdmin.wsdl
<br>Calculator.wsdl
<br>base.wsdl
<br>cbase.wsdl
<br>cGroupB.wsdl
<br>groupB.wsdl
<br>
5. The "include" folder contains all the include files which are necessary
for building Axis c++ clients.

<br>
6. "lib" folder contains jars needed to use the wsdl2ws tool.

<br>
7. "samples" folder contains sources for all the server and client samples including interop
tests.</p>




<p><a name="apache"></a></p>

<h1>Installation with Apache 1.3.X/2.X web server</h1>

<p>STEPS:</p>



<p>1. Install apache web server and locate the installation folder(For the
defalt installation this is "C:\Program Files\Apache Group\Apache" for apache
1.3.X and "C:\Program Files\Apache Group\Apache2" for apache 

2.X). Let say
this folder to be APACHE_FOLDER.</p>

<p>2. Unzip axis-c-1.1-win32.zip  to a folder of your choice. Say this
folder is AXIS_EXTRACT.</p>



<p>3. Inside the extracted folder AXIS_EXTRACT you have a sub folder called
deploy. Copy the whole deploy folder to APACHE_FOLDER.</p>



<p>4. Rename copied "deploy" folder to "Axis". Lets say this folder to be
AXIS_FOLDER.</p>



<p>5. Set environment variable AXIS_HOME to point to above folder.</p>



<p>6. Add AXIS_FOLDER/libs to the PATH environment variable.</p>



<p>7. Edit Apache configuration file httpd.conf located in APACHE_FOLDER/conf
and add following lines at the end. 


<br>


<br>
LoadModule axis_module modules/AXISMODULE<br>
&lt;Location /axis&gt;<br>
SetHandler axis

<br>
&lt;/Location&gt;

<br>
<br>
Where AXISMODULE is either mod_axis.dll for apache 1.3.X or mod_axis2.dll for
apache 2.X.<br>

<br>
8. Copy AXISMODULE from the AXIS_EXTRACT/bin folder to APACHE_FOLDER/modules
folder.</p>


<p>9. Open the AXIS_FOLDER/axiscpp.conf_win for editing. The contents of the file
will look as follows.</p>

<p></p>

<p>AXISLOGPATH:XXXX</p>

<p>WSDDFILEPATH:YYYY</p>

<p></p>

<p>Where XXXX will be the path to a file named AxisLog (The log file)and YYYY
will be the path to the server.wsdd file. Give the appropriate values for
XXXX and YYYY as follows.</p>

<p></p>

<p>i.e.</p>

<p></p>

<p>AXISLOGPATH: [APACHE_HOME]\Axis\logs\AxisLog</p>

<p>WSDDFILEPATH: [APACHE_HOME]\Axis\conf\WSDDFILE</p>

<p></p>

<p>Where WSDDFILE is [APACHE_HOME]\Axis\conf\server.wsdd for Apache 1.3 and
 Apache 2. (There will be three wsdd files in the [APACHE_HOME]\Axis\conf\ rename
the relevant wsdd file for your platform to server.wsdd).<br><br>
Also in order to run the samples provided do the following.<br>
Open server.wsdd for editing.
For each service element, locate the element "parameter", having the value "classname" for the "name" attribute.<br>
Change the value of the "value" attribute, to have the absolute path to the indicated webservice dll in that value.<br>
</p>

<p>Rename AXIS_FOLDER/axiscpp.conf_win to AXIS_FOLDER/axiscpp.conf</p>


<p><b> Installing the Expat XML parser</b></p>
<p>The Axis cpp binary uses Expat as the XML parser.You need to download the Expat-1.95.7 binary version from <a href="http://sourceforge.net/projects/expat/" >http://sourceforge.net/projects/expat/</a>

<br>Extract the Expat binaries to a folder Called Expat ,we will refer this folder as [EXPAT_EXTRACT].

<br>Copy libexpat.dll file from [EXPAT_EXTRACT]\Libs to [AXIS_HOME]/libs/

</p>

<p>10. Restart the apache web server. If you have done correctly apache server
should start without giving any error.</p>

<p></p>



<br>
<b>apache 1.3.X :</b></p>


<p>It is recommended that apache 1.3.X be started as "apache -k start" on the
command line</p>




<p><b>apache 2.X :</b></p>

<p>While testing the apache 2 module a problem was noted with the apache 2
web server, in that the webserver takes up about 98% of CPU time and the
server does not even serve the startup page. The workaround for this is to
start the apache web server as "apache -X" to make it run single threaded.
While this is sufficient to test the apache 2 module this problem needs to be
investigated further.</p>

<p>10. Open a internet browser and check http://localhost/axis. If the module
has loaded properly then you should get the axis welcome page with a listing
of deployed web services.</p>

<p><a name="simpleaxis"></a></p>



<h1>Installation with Simple Axis Server</h1>




<br>


<p>STEPS:</p>

<p>1. Create a folder of your choice. We will call this folder as
SIMPLE_AXIS_SERVER_FOLDER.</p>



<p>2. Unzip axis-c-1.1-win32.zip to a folder of your choice. Say this
folder AXIS_EXTRACT.</p>


<p>3.Inside the extracted folder AXIS_EXTRACT you have a sub folder called
deploy. Copy whole deploy folder to SIMPLE_AXIS_SERVER_FOLDER.</p>



<p>4. Rename copied "deploy" folder to "Axis". Lets say this folder to be
AXIS_FOLDER.</p>

<p>5. Set environment variable AXIS_HOME to point to above folder.</p>



<p>6. Copy the exe SimpleAxisServer.exe from AXIS_EXTRACT/bin to the
SIMPLE_AXIS_SERVER_FOLDER.</p>



<p>7. Copy the content of AXIS_FOLDER/libs to the
SIMPLE_AXIS_SERVER_FOLDER.</p>

<p>8. Start the SimpleAxisServer by providing the port to which operate. (eg:
c:\SimpleAxisServer&gt;SimpleAxisServer 80)</p>



<p><a name="samples"></a></p>

<h1>Running provided samples</h1>

<p>If Axis installation is a complete success, following sample web services
and handlers have already been installed successfully.</p>

<p>You will find the built console applications at AXIS/c/bin directory. Following are the built .exe files.
	<br>1.base.exe
	<br>2.cbase.exe
	<br>3.doclitbase.exe
	<br>4.doclitgroupB.exe
	<br>5.groupB.exe
         <br>6.cgroupB
<p>
<br> In order to run these samples you should have AxisClient.dll in the PATH environment 
variable or in the same directory where the client .exe is located.</p>

<p>You can run the provided client programs to confirm whether the Axis cpp sever and 
clients are working fine. To run this sample client
applications you need to have the path to libexapt.dll in the "PATH"
environment variable or libexapt.dll should be placed where the
apache.exe is. Note: These sample clients are compiled with assumption that
server is running at localhost port 80.</p>



<p><a name="playsamples"></a></p>

<h1>Using Visual C++ to play with provided samples.</h1>



<p>In your  AXIS_EXTRACT/samples folder you have the samples. If you are
using Visual C++ you can open the workspace file for client applications 
AXIS_EXTRACT\c\samples\client\interoptests\interoptests.dsw and For 
Deployable webservices, AXIS_EXTRACT\c\samples\server\interoptests\interoptests.dsw and play 
with them. There are seven projects in the workspace.</p>






<p><a name="writews"></a></p>

<h1>Writing your web services and client applications using Axis C++.</h1>

<p>For writing your own web services and client applications see the <a
href="winuser-guide.html">windows user guide</a>.</p>





</body>
</html>