<project name="Apache Axis C" default="build" basedir=".">
	<description>
This ANT script compiles Apache AxisC runtime binaries, WSDL2Ws tooling and
documentation.  To package a release deliverable use package.xml after building.

This script is intended for use with Java 1.4+ and Apache ANT 1.6+.
Ant is available from: http://ant.apache.org/

To compile C/C++ code you will require the ant-contrib and cpptasks extensions to ANT, within:
	[ant install dir]/lib
These are available from: http://ant-contrib.sourceforge.net/
{Note: You will require both the cpptasks and ant-contrib downloads }

It is intended that the default target be used, which compiles and links all code
and generates documentation.

Associated with this build script are property files for each platform, the script
will automatically determine the correct one to be used;
	- build.Win32.properties
	- build.Linux.properties
	- build.AIX.properties
	- build.SunOS.properties
Please use these to configure directories to suit the needs of your system.

Notes:
* The documentation target requires doxygen be installed and available on the system path
  This is available from: http://www.doxygen.org
* The following compilers will be required;
	- Windows = Microsoft Visual C++ 6.0
	- Linux   = gcc
	- AIX     = Visual Age
	</description>

	<import file="${basedir}/buildInitialize.xml"/>
	<import file="${basedir}/buildTraceTool.xml"/>
	<import file="${basedir}/buildClient.xml"/>
	<import file="${basedir}/buildTransport.xml"/>
	<import file="${basedir}/buildXMLParser.xml"/>
	<import file="${basedir}/buildWSDL2Ws.xml"/>

	<target name="compileTransport">
		<!-- Determine which flavour of transport to use -->
		<!-- Ideally extend this to produce multiple flavours -->
		<if>
			<equals arg1="${transport.axis}" arg2="true"/>
			<then>
				<antcall target="compileAxisTransport" inheritall="true">
					<param name="transport" value="axis"/>
					<param name="transportLibraryName" value="${axis.transportLibraryName}"/>
				</antcall>
			</then>
		</if>
		<if>
			<equals arg1="${transport.axis2}" arg2="true"/>
			<then>
				<antcall target="compileAxisTransport" inheritall="true">
					<param name="transport" value="axis2"/>
					<param name="transportLibraryName" value="${axis2.transportLibraryName}"/>
				</antcall>
			</then>
		</if>
		<if>
			<equals arg1="${transport.libwww}" arg2="true"/>
			<then>
				<antcall target="compileAxisTransport" inheritall="true">
					<param name="transport" value="libwww"/>
					<param name="transportLibraryName" value="${libwww.transportLibraryName}"/>
				</antcall>
			</then>
		</if>
	</target>

	<target name="compileXMLParser">
		<!-- Determine which flavour of xmlParser to use -->
		<!-- Ideally extend this to produce multiple flavours -->
		<if>
			<equals arg1="${xmlParser.xml4c}" arg2="true"/>
			<then>
				<antcall target="compileAxisXMLParser" inheritall="true">
					<param name="xmlParser" value="xml4c"/>
					<param name="dir.xmlParser" value="${xml4c.dir.xmlParser}"/>
					<param name="xmlParserLibrary" value="${xml4c.xmlParserLibrary}"/>
					<param name="xmlParserLibraryName" value="${xml4c.xmlParserLibraryName}"/>
				</antcall>
			</then>
		</if>
		<if>
			<equals arg1="${xmlParser.xerces}" arg2="true"/>
			<then>
				<antcall target="compileAxisXMLParser" inheritall="true">
					<param name="xmlParser" value="xerces"/>
					<param name="dir.xmlParser" value="${xerces.dir.xmlParser}"/>
					<param name="xmlParserLibrary" value="${xerces.xmlParserLibrary}"/>
					<param name="xmlParserLibraryName" value="${xerces.xmlParserLibraryName}"/>
				</antcall>
			</then>
		</if>
		<if>
			<equals arg1="${xmlParser.expat}" arg2="true"/>
			<then>
				<antcall target="compileAxisXMLParser" inheritall="true">
					<param name="xmlParser" value="expat"/>
					<param name="dir.xmlParser" value="${expat.dir.xmlParser}"/>
					<param name="xmlParserLibrary" value="${expat.xmlParserLibrary}"/>
					<param name="xmlParserLibraryName" value="${expat.xmlParserLibraryName}"/>
				</antcall>
			</then>
		</if>
	</target>

	<target name="compile">
		<antcall target="compileAxisClient" inheritall="true"/>
		<antcall target="compileTransport" inheritall="true"/>
		<antcall target="compileXMLParser" inheritall="true"/>
	</target>

	<import file="${basedir}/buildDocumentation.xml"/>

	<target name="buildAll" depends="compile, compileWSDL2Ws, buildWSDL2WsJARFile, documentation"/>


	<target name="build" depends="initialize"
	 description="Build runtime libraries, WSDL2Ws tool and API Documentation">
		<antcall target="buildAll" inheritall="true"/>
	</target>

	<target name="buildWithTrace" depends="initialize"
 	 description="Build traced runtime libraries, WSDL2Ws tool and API Documentation">
		<antcall target="addTrace" inheritall="true"/>
		<property name="trace" value="true"/>
		<antcall target="build" inheritall="true">
			<param name="dir.src" value="${dir.src.instrumented}"/>
		</antcall>
	</target>

	<target name="buildWithDebug" depends="initialize"
	 description="Build runtime libraries (with debug symbols), WSDL2Ws tool and API Documentation">
		<property name="debug" value="true"/>
		<antcall target="build" inheritall="true"/>
	</target>
	
	<target name="buildWithTraceAndDebug" depends="initialize"
	 description="Build traced runtime libraries (with debug symbols), WSDL2Ws tool and API Documentation">
		<antcall target="addTrace" inheritall="true"/>
		<property name="debug" value="true"/>
		<property name="trace" value="true"/>
		<antcall target="build" inheritall="true">
			<param name="dir.src" value="${dir.src.instrumented}"/>
		</antcall>
	</target>
	<!--
	  Remove all generated artifaces
	  -->
	<target name="clean" depends="initialize" description="Remove all generated artifacts">
		<!-- Delete trace instrumented C/C++ code -->
		<delete dir="${dir.src.instrumented}"/>
		<!-- Delete compiled C/C++ code -->
		<delete dir="${dir.bin}"/>
		<delete dir="${dir.objects}"/>
		<!-- Delete compiled WSDL2Ws java classes -->
		<delete dir="${dir.classes}"/>
		<!-- Delete generated Documentation -->
		<delete dir="${basedir}/docs/apidocs/html"/>
		<delete dir="${basedir}/docs/apidocs/latex"/>
	</target>

</project>
