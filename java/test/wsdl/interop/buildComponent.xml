<?xml version="1.0"?>
<!DOCTYPE project [
        <!ENTITY properties SYSTEM "file:../../../xmls/properties.xml">
        <!ENTITY paths  SYSTEM "file:../../../xmls/path_refs.xml">
        <!ENTITY taskdefs SYSTEM "file:../../../xmls/taskdefs.xml">
        <!ENTITY taskdefs_post_compile SYSTEM "file:../../../xmls/taskdefs_post_compile.xml">
        <!ENTITY targets SYSTEM "file:../../../xmls/targets.xml">
]>

<!-- ===================================================================
==================================================================== -->

<project default="compile">
<property name="axis.home" location="../../.." />
<property name="componentName" value="test/wsdl/interop" />
        &properties;
        &paths;
        &taskdefs;
        &taskdefs_post_compile;
	&targets;

  <target name="clean" />
  
  <target name="copy" depends="setenv"/>

  <target name="compile" depends="copy" >
    <!-- Use this to check the classpath if the ANT Task fails... -->

    <!--
    <property name="test-classpath.property" refid="classpath"/>
    <echo message="Classpath for wsdl2java task : ${test-classpath.property}"/>
    -->

    <copy todir="${build.dir}/classes" overwrite="yes">
      <fileset dir="${test.dir}/wsdl/_import">
        <include name="NStoPkg.properties"/>
      </fileset>
    </copy>
    <copy todir="${build.dir}/work/samples" overwrite="yes">
      <fileset dir="${samples.dir}">
        <include name="**/userguide/example6/"/>
      </fileset>
    </copy>
<!-- mseibert
    <javac srcdir="${build.dir}/work" destdir="${build.dest}"
           debug="${debug}">
      <classpath refid="classpath" />
      <include name="**/*.java" />
      <exclude name="test/wsdl/interop3/**/*.java" />
    </javac>
 
    <echo message="Running WSDL2Java and Java2WSDL Emitters"/>
-->
    <!-- WidgetPrice Java to WSDL Samples -->
<!-- mseibert
    <java2wsdl output="${axis.home}/build/work/samples/userguide/example6/WidgetPrice.wsdl"
               className= "samples.userguide.example6.WidgetPrice"
               namespace="urn:Example6"
               location="http://localhost:8080/axis/services/WidgetPrice">
        <mapping namespace="urn:Example6" package="samples.userguide.example6"/>
    </java2wsdl>
   <wsdl2java url="${axis.home}/build/work/samples/userguide/example6/WidgetPrice.wsdl"
               output="${axis.home}/build/work"
               deployscope="session"
               serverSide="yes"
               skeletonDeploy="yes"
               noimports="no"
               verbose="no"
               testcase="yes">
        <mapping namespace="urn:Example6" package="samples.userguide.example6"/>
    </wsdl2java>

-->

    <!-- SOAPBuilders Interoperability Lab "Round 1" -->
    <!--     http://www.xmethods.net/ilab/           -->
    <wsdl2java url="http://www.xmethods.net/tmodels/InteropTest.wsdl"
               output="${axis.home}/build/work"
               deployscope="none"
               serverSide="yes"
               noimports="no"
               verbose="no"
               testcase="no">
        <mapping namespace="http://soapinterop.org/" package="net.xmethods"/>
        <mapping namespace="http://soapinterop.org/xsd" package="net.xmethods"/>
    </wsdl2java>
    <!-- SOAPBuilders Interoperability Lab "Round 2" -->
    <!--     http://www.whitemesa.com/interop.htm    -->
    <wsdl2java url="http://www.whitemesa.com/interop/InteropTest.wsdl"
               output="${axis.home}/build/work"
               deployscope="none"
               serverSide="yes"
               noimports="no"
               verbose="no"
               testcase="no">
        <mapping namespace="http://soapinterop.org/" package="interop.test"/>
        <mapping namespace="http://soapinterop.org/xsd" package="interop.test"/>
    </wsdl2java>
    <wsdl2java url="http://www.whitemesa.com/interop/InteropTestB.wsdl"
               output="${axis.home}/build/work"
               deployscope="none"
               serverSide="yes"
               noimports="no"
               verbose="no"
               testcase="no">
        <mapping namespace="http://soapinterop.org/" package="interop.testb"/>
        <mapping namespace="http://soapinterop.org/xsd" package="interop.testb"/>
    </wsdl2java>
    <!-- More information at: http://www.whitemesa.net/  -->
<!--    <wsdl2java url="http://www.whitemesa.com/wsdl/std/echoheadersvc.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="http://soapinterop.org/" package="interop.echoheadersvc"/>
        <mapping namespace="http://soapinterop.org/xsd" package="interop.echoheadersvc"/>
    </wsdl2java>
-->
    <!-- http://www.mssoapinterop.org/stk/roundBC.htm -->
    <wsdl2java url="http://mssoapinterop.org/stk/InteropB.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="http://soapinterop.org/" package="mssoapinterop.interopb"/>
        <mapping namespace="http://soapinterop.org/xsd" package="mssoapinterop.interopb"/>
    </wsdl2java>
    <wsdl2java url="http://mssoapinterop.org/stk/InteropBtyped.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="http://soapinterop.org/" package="mssoapinterop.interopbtyped"/>
        <mapping namespace="http://soapinterop.org/xsd" package="mssoapinterop.interopbtyped"/>
    </wsdl2java>
    <wsdl2java url="http://mssoapinterop.org/stk/InteropC.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="http://soapinterop.org" package="mssoapinterop.interopc"/>
        <mapping namespace="http://soapinterop.org/" package="mssoapinterop.interopc"/>
        <mapping namespace="http://soapinterop.org/xsd" package="mssoapinterop.interopc"/>
    </wsdl2java>
    <!-- SOAP Builder's round III web services          -->
    <!-- interoperability testing:  import1             -->
    <!-- (see http://www.whitemesa.com/r3/plan.html)    -->
    <!-- Step 1.  Start with predefined WSDL            -->
    <!-- Step 2.  Generate client from predefined WSDL  -->
    <!-- Step 3.  Test generated client against         -->
    <!--          pre-built server                      -->
    <!-- Step 4.  Generate server from predefined WSDL  -->
    <!-- Step 5.  Test generated client against         -->
    <!--          generated server                      -->
    <!-- Step 6.  Generate second client from           -->
    <!--          generated server's WSDL (some clients -->
    <!--          can do this dynamically)              -->
    <!-- Step 7.  Test second generated client against  -->
    <!--          generated server                      -->
    <!-- Step 8.  Test second generated client against  -->
    <!--          pre-built server                      -->
    <!-- Steps 1, 2 and 4: -->
    <wsdl2java url="http://www.whitemesa.com/r3/import1.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/" package="test.wsdl.interop3.import1"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import1.definitions"/>
    </wsdl2java>
    <javac srcdir="${build.dir}/work" destdir="${build.dest}" debug="on">
      <classpath refid="classpath" />
      <include name="test/wsdl/interop3/import1/*.java" />
    </javac>
    <!-- Step 3:  see test/wsdl/interop3/Import1TestCase.java -->
    <!-- Step 5:  see test/wsdl/interop3/Import1TestCase.java -->
    <!-- Step 6:  -->
    <java2wsdl output="${axis.home}/build/work/test/wsdl/interop3/import1.wsdl"
               className= "test.wsdl.interop3.import1.definitions.SoapInteropImport1PortType"
               namespace="http://soapinterop.org/definitions/"
               implClass="test.wsdl.interop3.import1.SoapInteropImport1BindingImpl"
           location="http://localhost:8080/axis/services/SoapInteropImport1Port">
        <mapping namespace="http://soapinterop.org/" package="test.wsdl.interop3.import1"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import1.definitions"/>
    </java2wsdl>
    <wsdl2java url="${axis.home}/build/work/test/wsdl/interop3/import1.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/" package="test.wsdl.interop3.import1.step6"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import1.step6.definitions"/>
    </wsdl2java>
    <!-- Step 7:  see test/wsdl/interop3/Import1TestCase.java -->
    <!-- Step 8:  see test/wsdl/interop3/Import1TestCase.java -->
    <!-- SOAP Builder's round III web services -->
    <!-- interoperability testing:  import2    -->
    <!-- Steps 1, 2 and 4: -->
    <wsdl2java url="http://www.whitemesa.com/r3/import2.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.import2"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import2.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import2.xsd"/>
    </wsdl2java>
    <javac srcdir="${build.dir}/work" destdir="${build.dest}" debug="on">
      <classpath refid="classpath" />
      <include name="test/wsdl/interop3/import2/*.java" />
    </javac>
    <!-- Step 3:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 5:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 6:  -->
    <java2wsdl output="${axis.home}/build/work/test/wsdl/interop3/import2.wsdl"
               className= "test.wsdl.interop3.import2.definitions.SoapInteropImport2PortType"
               namespace="http://soapinterop.org/definitions/"
               implClass="test.wsdl.interop3.import2.SoapInteropImport2BindingImpl"
           location="http://localhost:8080/axis/services/SoapInteropImport2Port">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.import2"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import2.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import2.xsd"/>
    </java2wsdl>
    <wsdl2java url="${axis.home}/build/work/test/wsdl/interop3/import2.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.import2.step6"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import2.step6.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import2.step6.xsd"/>
    </wsdl2java>
    <!-- Step 7:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 8:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- SOAP Builder's round III web services       -->
    <!-- interoperability testing:  absolute import2 -->
    <!-- Steps 1, 2 and 4: -->
    <wsdl2java url="http://www.dolphinharbor.org/services/R3Import2/service.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.absimport2"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.absimport2.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.absimport2.xsd"/>
    </wsdl2java>
    <javac srcdir="${build.dir}/work" destdir="${build.dest}" debug="on">
      <classpath refid="classpath" />
      <include name="test/wsdl/interop3/absimport2/*.java" />
    </javac>
    <!-- Step 3:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 5:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 6:  -->
 <!-- Commented out by scheu...not working
    <java2wsdl output="${axis.home}/build/work/test/wsdl/interop3/absimport2.wsdl"
               className= "test.wsdl.interop3.absimport2.definitions.SoapInteropImport2PortType"
               namespace="http://soapinterop.org/definitions/"
           location="http://localhost:8080/axis/services/SoapInteropImport2Port">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.absimport2"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.absimport2.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.absimport2.xsd"/>
    </java2wsdl>
    <wsdl2java url="${axis.home}/build/work/test/wsdl/interop3/absimport2.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.absimport2.step6"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.absimport2.step6.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.absimport2.step6.xsd"/>
    </wsdl2java>
-->
    <!-- Step 7:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 8:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- SOAP Builder's round III web services -->
    <!-- interoperability testing:  import3    -->
    <!-- Steps 1, 2 and 4: -->
    <wsdl2java url="http://www.whitemesa.com/r3/import3.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main2/" package="test.wsdl.interop3.import3"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import3.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import3.xsd"/>
        <mapping namespace="http://soapinterop.org/xsd2" package="test.wsdl.interop3.import3.xsd2"/>
    </wsdl2java>
    <javac srcdir="${build.dir}/work" destdir="${build.dest}" debug="on">
      <classpath refid="classpath" />
      <include name="test/wsdl/interop3/import3/*.java" />
    </javac>
    <!-- Step 3:  see test/wsdl/interop3/Import3TestCase.java -->
    <!-- Step 5:  see test/wsdl/interop3/Import3TestCase.java -->
    <!-- Step 6:  -->
    <java2wsdl output="${axis.home}/build/work/test/wsdl/interop3/import3.wsdl"
               className= "test.wsdl.interop3.import3.SoapInteropImport3PortType"
               namespace="http://soapinterop.org/definitions/"
               implClass="test.wsdl.interop3.import3.SoapInteropImport3BindingImpl"
           location="http://localhost:8080/axis/services/SoapInteropImport3Port">
        <mapping namespace="http://soapinterop.org/main2/" package="test.wsdl.interop3.import3"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import3.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import3.xsd"/>
        <mapping namespace="http://soapinterop.org/xsd2" package="test.wsdl.interop3.import3.xsd2"/>
    </java2wsdl>

    <wsdl2java url="${axis.home}/build/work/test/wsdl/interop3/import3.wsdl"
               output="${axis.home}/build/work"
               serverSide="yes">
        <mapping namespace="http://soapinterop.org/main/" package="test.wsdl.interop3.import3.step6"/>
        <mapping namespace="http://soapinterop.org/definitions/" package="test.wsdl.interop3.import3.step6.definitions"/>
        <mapping namespace="http://soapinterop.org/xsd" package="test.wsdl.interop3.import3.step6.xsd"/>
        <mapping namespace="http://soapinterop.org/xsd2" package="test.wsdl.interop3.import3.step6.xsd2"/>
    </wsdl2java>
    <!-- Step 7:  see test/wsdl/interop3/Import2TestCase.java -->
    <!-- Step 8:  see test/wsdl/interop3/Import2TestCase.java -->
    <ant antfile="${axis.home}/test/wsdl/interop3/groupE/Interop3GroupE.xml"/>
    <!-- UDDI 1.0 WSDL's -->
<!-- tomj: turn these off while attribute processing is in flux
    <wsdl2java url="http://www.uddi.org/wsdl/inquire_v1.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="urn:uddi-org:api" package="org.uddi.api"/>
        <mapping namespace="urn:uddi-org:inquiry" package="org.uddi.inquiry"/>
    </wsdl2java>
    <wsdl2java url="http://www.uddi.org/wsdl/publish_v1.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="urn:uddi-org:api" package="org.uddi.api"/>
        <mapping namespace="urn:uddi-org:publication" package="org.uddi.publication"/>
    </wsdl2java>
-->
    <!-- XMethods Delayed Quote Service from http://www.xmethods.net/detail.html?id=2 -->
    <wsdl2java url="http://services.xmethods.net/soap/urn:xmethods-delayed-quotes.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
    </wsdl2java>
    <!-- This tests .NET document/literal WSDL.
         We get this WSDL file from the internet on purpose,
         file is only for reference.
    <wsdl2java url="${axis.home}/test/wsdl/literal/SalesRankNPrice.wsdl"
     -->
    <wsdl2java url="http://www.perfectxml.net/WebServices/SalesRankNPrice/BookService.asmx?WSDL"
               output="${axis.home}/build/work"
               verbose="no"
               serverSide="no"
               testcase="no">
        <mapping namespace="http://www.PerfectXML.com/NETWebSvcs/BookService" package="test.wsdl.literal"/>
    </wsdl2java>
    <!-- The following WSDL are BAD.  We're keeping them here so we can -->
    <!-- check periodically to see whether the owner has fixed them.    -->
    <!-- Real-time Quote Server from http://www.xmltoday.com/examples/soap/realtime.psp -->
    <!--
    <wsdl2java url="http://services.xmltoday.com/vx_engine/wsdl.vep?realtime.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="no"
               noimports="no">
        <mapping namespace="urn:vgx-realtime" package="com.velocigen.thor"/>
    </wsdl2java>
    <wsdl2java url="http://services.xmltoday.com/vx_engine/wsdl_publish.vep/realtime.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="yes"
               noimports="no">
    </wsdl2java>
    More information at: http://www.whitemesa.com/interop/proposalC.html
    this WSDL file is bad.  It refers to portType "InteropTestPortType" but that portType is not defined.
    <wsdl2java url="http://www.whitemesa.com/interop/echoHeaderBindings.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="yes"
               noimports="no">
        <mapping namespace="http://soapinterop.org/" package="interop.echoheader"/>
        <mapping namespace="http://soapinterop.org/xsd" package="interop.echoheader"/>
    </wsdl2java>
    Reverse lookup of US Area codes and International Country codes from
    http://www.soapclient.com/uddi/uddi.sri?requestname=get_xmethods
    namespaces are used improperly
    > WSDL2Java http://www.taragroup.com/bin/AreaCode.exe/wsdl/iGetArea
    java.io.IOException: Emitter failure.  There is an undefined binding (IGetAreabinding) in the WSDL document.
    Hint: make sure <port binding=".."> is fully qualified.
    <wsdl2java url="http://www.taragroup.com/bin/AreaCode.exe/wsdl/iGetArea"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="yes"
               noimports="no">
    </wsdl2java>
    wrong namespace used when referring to types:
    > WSDL2Java http://www.lemurlabs.com/projects/soap/fortune/FortuneService.wsdl
    java.io.IOException: Type http://www.lemurlabs.com/projects/soap/fortune/FortuneService.wsdl:ArrayOfString is referenced but not defined.
    <wsdl2java url="http://www.lemurlabs.com/projects/soap/fortune/FortuneService.wsdl"
               output="${axis.home}/build/work"
               testcase="no"
               deployscope="none"
               serverSide="yes"
               verbose="yes"
               noimports="no">
    </wsdl2java>
    -->
  </target>

<target name="run" >
  <antcall target="execute-Component" />
</target>

</project>
