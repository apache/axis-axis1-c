<?xml version="1.0" ?>

<definitions 
    name="comprehensive types test"
    targetNamespace="comprehensive-service.types.wsdl.test"
    xmlns:tns="comprehensive-service.types.wsdl.test"
    xmlns:typens="comprehensive-types.types.wsdl.test"
    xmlns:typens2="comprehensive-types2.types.wsdl.test"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns="http://schemas.xmlsoap.org/wsdl/">

  <!-- type defs -->
  <types>
    <xsd:schema 
        targetNamespace="comprehensive-types.types.wsdl.test"
        xmlns:xsd="http://www.w3.org/1999/XMLSchema">

      <xsd:simpleType name="enum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="one"/>                      
          <xsd:enumeration value="two"/>                    
          <xsd:enumeration value="three"/>                    
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:complexType name="array">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:string[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="complexAll">
        <xsd:all>
          <xsd:element name="areaCode" type="xsd:int"/>
          <xsd:element name="exchange" type="xsd:string"/>
          <xsd:element name="number" type="xsd:string"/>
        </xsd:all>
      </xsd:complexType>

      <xsd:complexType name="complexSequence">
        <xsd:sequence>
          <xsd:element name="areaCode" type="xsd:int"/>
          <xsd:element name="exchange" type="xsd:string"/>
          <xsd:element name="number" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="elemWComplex">
        <xsd:complexType>
          <xsd:all>
            <xsd:element name="one" type="xsd:string"/>
            <xsd:element name="two" type="typens2:fwd"/> <!-- Forward type use to dif namespace -->
            <xsd:element ref="typens2:three"/>           <!-- Forward ref use to a dif namespace -->
            <xsd:element name="enum1" type="typens:enumString"/>
            <xsd:element name="enum2" type="typens:enumInt"/>
            <xsd:element name="enum3" type="typens:enumLong"/>
            <xsd:element name="enum4" type="typens:enumFloat"/>
            <xsd:element name="enum5" type="typens:enumDouble"/>
            <xsd:element name="enum6" type="typens:enumShort"/>
            <xsd:element name="enum7" type="typens:enumByte"/>
            <xsd:element name="nested" type="typens2:b"/>
          </xsd:all>
        </xsd:complexType>
      </xsd:element>

      <xsd:complexType name="complexWComplex">
        <xsd:sequence>
          <xsd:element name="stock_quote">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="symbol" type="xsd:string"/>
                <xsd:element name="time" type="xsd:string"/>
                <xsd:element name="last" type="xsd:string"/>
                <xsd:element name="change" type="xsd:string"/>  
                <xsd:element name="pctchange" type="xsd:string"/>
                <xsd:element name="bid" type="xsd:string"/>
                <xsd:element name="ask" type="xsd:string"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="outside" type="xsd:int"/>
        </xsd:sequence>
      </xsd:complexType>


      <!-- The following definitions validate forward refs -->
      <xsd:complexType name="arrayM">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="typens:arrayM2[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="arrayM2">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="typens:arrayM3[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="arrayM3">
        <xsd:complexContent>
          <xsd:restriction base="soapenc:Array">
            <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:int[]"/>
          </xsd:restriction>
        </xsd:complexContent>
      </xsd:complexType>

      <!-- The following test all of the valid enum basic types -->
      <xsd:simpleType name="enumString">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Ho Ho Ho"/> <!-- Blanks should force value<1..n> names -->        
          <xsd:enumeration value="He He He"/>                    
          <xsd:enumeration value="Ha Ha Ha"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumInt">
        <xsd:restriction base="xsd:int">
          <xsd:enumeration value="1"/>
          <xsd:enumeration value="2"/>                    
          <xsd:enumeration value="3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumLong">
        <xsd:restriction base="xsd:long">
          <xsd:enumeration value="1"/>
          <xsd:enumeration value="2"/>                    
          <xsd:enumeration value="3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumShort">
        <xsd:restriction base="xsd:short">
          <xsd:enumeration value="1"/>
          <xsd:enumeration value="2"/>                    
          <xsd:enumeration value="3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumFloat">
        <xsd:restriction base="xsd:float">
          <xsd:enumeration value="1.1"/>
          <xsd:enumeration value="2.2"/>                    
          <xsd:enumeration value="3.3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumDouble">
        <xsd:restriction base="xsd:double">
          <xsd:enumeration value="1.1"/>
          <xsd:enumeration value="2.2"/>                    
          <xsd:enumeration value="3.3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="enumByte">
        <xsd:restriction base="xsd:byte">
          <xsd:enumeration value="1"/>
          <xsd:enumeration value="2"/>                    
          <xsd:enumeration value="3"/>                    
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>


    <xsd:schema 
        targetNamespace="comprehensive-types2.types.wsdl.test"
        xmlns:xsd="http://www.w3.org/1999/XMLSchema">
        <xsd:complexType name="fwd">
          <xsd:complexContent>
            <xsd:restriction base="soapenc:Array">
              <xsd:attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:QName[]"/>
            </xsd:restriction>
          </xsd:complexContent>
        </xsd:complexType>

        <!-- Collection of enums -->
        <xsd:element name="three" type="typens:enum" maxOccurs="unbounded" />


        <!-- Test for nested defined complexType -->
        <xsd:element name="a" type="xsd:short" />
        <xsd:complexType name="b">
          <xsd:sequence>
            <xsd:complexType name="a">
              <xsd:sequence>
                <xsd:element name="c" type="xsd:int" />
              </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="d" type="typens2:a" />
          </xsd:sequence>
        </xsd:complexType>
    </xsd:schema>

  </types>

  <!-- message declns -->
  <message name="empty"/>

  <message name="allPrimitives">
    <part name="string" type="xsd:string"/>
    <part name="integer" type="xsd:integer"/>
    <part name="int" type="xsd:int"/>
    <part name="long" type="xsd:long"/>
    <part name="short" type="xsd:short"/>
    <part name="decimal" type="xsd:decimal"/>
    <part name="float" type="xsd:float"/>
    <part name="double" type="xsd:double"/>
    <part name="boolean" type="xsd:boolean"/>
    <part name="byte" type="xsd:byte"/>
    <part name="QName" type="xsd:QName"/>
    <part name="dateTime" type="xsd:dateTime"/>
    <part name="base64Binary" type="xsd:base64Binary"/>
    <part name="hexBinary" type="xsd:hexBinary"/>
    <part name="soapString" type="soapenc:string"/>
    <part name="soapBoolean" type="soapenc:boolean"/>
    <part name="soapFloat" type="soapenc:float"/>
    <part name="soapDouble" type="soapenc:double"/>
    <part name="soapDecimal" type="soapenc:decimal"/>
    <part name="soapInt" type="soapenc:int"/>
    <part name="soapShort" type="soapenc:short"/>
    <part name="soapBase64" type="soapenc:base64"/>
  </message>

  <message name="enum">
    <part name="enum" type="typens:enum"/>
  </message>

  <message name="array">
    <part name="array" type="typens:array"/>
  </message>

  <message name="arrayM">
    <part name="arrayM" type="typens:arrayM"/>
  </message>

  <message name="complexAll">
    <part name="complexAll" type="typens:complexAll"/>
  </message>

  <message name="complexSequence">
    <part name="complexSequence" type="typens:complexSequence"/>
  </message>

  <message name="elemWComplex">
    <part name="elemWComplex" element="typens:elemWComplex"/>
  </message>

  <message name="complexWComplex">
    <part name="complexWComplex" type="typens:complexWComplex"/>
  </message>

  <message name="any">
    <part name="any" type="xsd:anyType"/>
  </message>

  <!-- port type declns -->
  <portType name="TypeTest">
    <operation name="allPrimitivesIn">
      <input message="tns:allPrimitives"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="allPrimitivesInout">
      <input message="tns:allPrimitives"/>
      <output message="tns:allPrimitives"/>
    </operation>
    <operation name="allPrimitivesOut">
      <input message="tns:empty"/>
      <output message="tns:allPrimitives"/>
    </operation>
    <operation name="enumIn">
      <input message="tns:enum"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="enumInout">
      <input message="tns:enum"/>
      <output message="tns:enum"/>
    </operation>
    <operation name="enumOut">
      <input message="tns:empty"/>
      <output message="tns:enum"/>
    </operation>
    <operation name="arrayIn">
      <input message="tns:array"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="arrayInout">
      <input message="tns:array"/>
      <output message="tns:array"/>
    </operation>
    <operation name="arrayOut">
      <input message="tns:empty"/>
      <output message="tns:array"/>
    </operation>

    <operation name="arrayMIn">
      <input message="tns:arrayM"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="arrayMInout">
      <input message="tns:arrayM"/>
      <output message="tns:arrayM"/>
    </operation>
    <operation name="arrayMOut">
      <input message="tns:emptyM"/>
      <output message="tns:arrayM"/>
    </operation>

    <operation name="complexAllIn">
      <input message="tns:complexAll"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="complexAllInout">
      <input message="tns:complexAll"/>
      <output message="tns:complexAll"/>
    </operation>
    <operation name="complexAllOut">
      <input message="tns:empty"/>
      <output message="tns:complexAll"/>
    </operation>
    <operation name="complexSequenceIn">
      <input message="tns:complexSequence"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="complexSequenceInout">
      <input message="tns:complexSequence"/>
      <output message="tns:complexSequence"/>
    </operation>
    <operation name="complexSequenceOut">
      <input message="tns:empty"/>
      <output message="tns:complexSequence"/>
    </operation>
    <operation name="elemWComplexIn">
      <input message="tns:elemWComplex"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="elemWComplexInout">
      <input message="tns:elemWComplex"/>
      <output message="tns:elemWComplex"/>
    </operation>
    <operation name="elemWComplexOut">
      <input message="tns:empty"/>
      <output message="tns:elemWComplex"/>
    </operation>
    <operation name="complexWComplexIn">
      <input message="tns:complexWComplex"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="complexWComplexInout">
      <input message="tns:complexWComplex"/>
      <output message="tns:complexWComplex"/>
    </operation>
    <operation name="complexWComplexOut">
      <input message="tns:empty"/>
      <output message="tns:complexWComplex"/>
    </operation>
    <operation name="anyIn">
      <input message="tns:any"/>
      <output message="tns:empty"/>
    </operation>
    <operation name="anyInout">
      <input message="tns:any"/>
      <output message="tns:any"/>
    </operation>
    <operation name="anyOut">
      <input message="tns:empty"/>
      <output message="tns:any"/>
    </operation>
  </portType>

  <!-- binding declns -->
  <binding name="TypeTestBinding" type="tns:TypeTest">
    <soap:binding
        style="rpc"
        transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="allPrimitivesIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="allPrimitivesInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="allPrimitivesOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="enumIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="enumInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="enumOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="arrayIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="arrayInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="arrayOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>

    <operation name="arrayMIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="arrayMInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="arrayMOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>

    <operation name="complexAllIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexAllInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexAllOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexSequenceIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexSequenceInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexSequenceOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="elemWComplexIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="elemWComplexInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="elemWComplexOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexWComplexIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexWComplexInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="complexWComplexOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="anyIn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="anyInout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
    <operation name="anyOut">
      <soap:operation soapAction=""/>
      <input>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body
            use="encoded"
            namespace=""
            encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
    </operation>
  </binding>

  <!-- service decln -->
  <service name="TypeTestService">
    <port name="TypeTest" binding="tns:TypeTestBinding">
      <soap:address location="http://localhost:8080/axis/services/TypeTest"/>
    </port>
  </service>

</definitions>

