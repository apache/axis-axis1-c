WSIF.0001E=WSIF0001E: An extension registry was not found for the element type ''{0}''
# Parameter(s):    {0} element type
# Description:     No extension registry was found for the element type specfied.
# User Action:     Add the appropriate extension registry to the port factory in your code.

WSIF.0002E=WSIF0002E: A failure occured in loading WSDL from ''{0}''
# Parameter(s):    {0} location of the WSDL file
# Description:     The WSDL file could not be found at the location specified or did not parse correctly
# User Action:     Check that the location of the WSDL file is correct. Check that any network connections required are available.
#                  Check that the WSDL file contains valid WSDL.

WSIF.0003E=WSIF0003E: A failure occured in loading ''{0}'' within jar ''{1}''
# Parameter(s):    {0} location of the WSDL file within the jar file
#                  {1} location of the jar file
# Description:     The WSDL file could not be found within the jar file at the location specified or did not parse correctly
# User Action:     Check that the location of the jar file is correct. Check that the location of the WSDL file within the jar is correct.
#                  Check that any network connections required are available. Check that the WSDL file contains valid WSDL.

WSIF.0004E=WSIF0004E: WSDL contains an operation type ''{0}'' which is not supported for ''{1}''
# Parameter(s):    {0} name of the operation type specified
#                  {1} name of the portType for the operation
# Description:     An operation type which is not supported has been specified in the WSDL.
# User Action:     Remove any operations of the unsupported type from the WSDL. If the operation is required then make sure all messages
#                  have been correctly specified for the operation.

WSIF.0005E=WSIF0005E: An error occured when invoking the method ''{1}''. (''{0}'') 
# Parameter(s):    {0} name communication type e.g. EJB or ApacheSOAP
#                  {1} name of the method which failed
# Description:     An error was encountered when invoking a method on the web service using the communication shown in brackets.
# User Action:     Check that the method exists on the web service and that the correct parts have been added to the operation as described in the WSDL.
#                  Network problems might be a cause if the method is remote and so check any required connections.

WSIF.0006W=WSIF0006W: Multiple WSIFProvider found supporting the same namespace URI ''{0}''. Found (''{1}'') 
# Parameter(s):    {0} the namespace URI
#                  {1} a list of the WSIFProvider found
# Description:     There are multiple com.ibm.wsif.spi.WSIFProvider classes in the service provider path that support the same namespace URI.
# User Action:     A following WSIF0007I message will be issued notifing which WSIPFProvider will be used.
#                  Which WSIFProvider is choosen is based on settings in the wsif.properties file, or if not defined in the properties, the last WSIFProvider found will be used.
#                  See the wsif.properties file for more details on how to define which provider should be used to support a namespace URI.
                  
WSIF.0007I=WSIF0007I: Using WSIFProvider ''{0}'' for namespaceURI ''{1}
# Parameter(s):    {0} the classname of the WSIFProvider being used.
#                  {1} the namespaceURI the provider will be used to support.
# Description:     Either a previous WSIF0006W message has been issued or the SetDynamicWSIFProvider method has been used to override the provider used to support a namespaceURI.
# User Action:     None. See also WSIF0006W.
                  
WSIF.0008W=WSIF0008W: WSIFDefaultCorrelationService removing corelator due to timeout. ID:''{0}''
# Parameter(s):    {0} the id of the correlator being removed from the correlation service
# Description:     A stored correlator is being removed from the correlation service due to its timeout expiring.
# User Action:     Determine why no response has been received for the asynchronous request within the timeout period.
#                  The wsif.asyncrequest.timeout property of the wsif.properties file defines the length of the timeout period.                  
                  
WSIF.0009I=WSIF0009I: Using correlation service - ''{0}''
# Parameter(s):    {0} the name of the correlation service being used
# Description:     This identifies the name of the correlation service that will be used to prccess asynchronous requests.
# User Action:     None. If a correlation service other than the default WSIF supplied one is required, ensure that it is correclty registered in the JNDI java:comp/wsif/WSIFCorrelationService namespace.
                  
WSIF.0010I=WSIF0010E: Exception thrown while processing asynchronous response - ''{0}''
# Parameter(s):    {0} the error message string of the exception
# Description:     While processing the response from an executeRequestResponseAsync call an exception was thrwon.
# User Action:     Use the exception error message string to determine the cause of the error. The WSIF trace will have more details on the error including the exception stack trace.
