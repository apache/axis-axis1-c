#####################################
# Parser that the client should use #
#####################################
#only one parse can be used at a given time

testconf.client.parser.xml4c = true
testconf.client.parser.xerces = false
#############################
# Server to deploy Services #
#############################
#Only one server can be used at a given time
#Also APACHE_HOME, APACHE2_HOME (simple axis server needs no environment settings) environment 
#variables should be set accordingly

server.apache1=false
server.apache2=false
server.simpleaxisserver=false

#####################
# Items to be built #
#####################

# Set the following to true if you wish the server libraries be built
# See options below for Apache modules and Stand-alone server
server = false

# Set the following to true if you wish the API documentation be generated
documentation = false

#####################
# Parser Properties #
#####################

# Typical values are:
#	For Xerces, on Windows:
#		xmlParser = xerces
#		xmlParserLibrary = xerces-c_2
#	For Xerces, on Unix:
#		xmlParser = xerces
#		xmlParserLibrary = xerces-c

# Parsers to be used
xmlParser.xml4c = true
xmlParser.xerces = false

## Values used for XML4C
xml4c.xmlParserLibrary = libxml4c

## Values used for Xerces
xerces.xmlParserLibrary = libxerces-c


# Name for compiled XML Parser library - excluding any prefix or suffix
# eg: For Windows :   axis_xmlparser will produce axis_xmlparser.dll
#     For Unix    :   axis_xmlparser will produce libaxis_xmlparser.so
xmlParserLibraryName = axis_xmlparser

#############################
# Secure Channel Properties #
#############################

HTTP.SSLChannel = false

########################################
# Location of wsdl2ws for Deliverables #
########################################
dir.wsdl2ws = ${dir.release}/lib/axis

# Prefix and suffix used for executables and libraries
# Typical values are:
#   For windows:
#		executableSuffix = .exe
#		librarySuffix = .dll
#		libraryPrefix = 
#	For unix:
#		executableSuffix = 
#		librarySuffix = .so
#		libraryPrefix = lib
#	For AIX (as Unix, except):
#		librarySuffix = .a
executableSuffix = 
librarySuffix = .so
libraryPrefix = lib
