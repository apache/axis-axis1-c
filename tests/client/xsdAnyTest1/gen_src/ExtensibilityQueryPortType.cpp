/*
 * This file was auto-generated by the Axis C++ Web Service Generator (WSDL2Ws)
 * This file contains Client Stub implementation for remote web service.
 */

#include "ExtensibilityQueryPortType.h"

#include <axis/server/AxisWrapperAPI.hpp>

#include <string>

extern int Axis_DeSerialize_ExtensibilityType(ExtensibilityType* param, IWrapperSoapDeSerializer* pDZ);
extern void* Axis_Create_ExtensibilityType(ExtensibilityType *Obj, bool bArray = false, int nSize=0);
extern void Axis_Delete_ExtensibilityType(ExtensibilityType* param, bool bArray = false, int nSize=0);
extern int Axis_Serialize_ExtensibilityType(ExtensibilityType* param, IWrapperSoapSerializer* pSZ, bool bArray = false);
extern int Axis_GetSize_ExtensibilityType();

ExtensibilityQueryPortType::ExtensibilityQueryPortType(const char* pcEndpointUri, AXIS_PROTOCOL_TYPE eProtocol):Stub(pcEndpointUri, eProtocol)
{
}

ExtensibilityQueryPortType::ExtensibilityQueryPortType()
:Stub(" ", APTHTTP)
{
	m_pCall->setEndpointURI("http://localhost:80/axis/testXSDANY");
}

ExtensibilityQueryPortType::~ExtensibilityQueryPortType()
{
}


/*Methods corresponding to the web service methods*/

/*
 * This method wrap the service methodquery
 */
AnyType* ExtensibilityQueryPortType::query(AnyType* Value0)
{
	AnyType* pReturn = NULL;
	try
	{	if (AXIS_SUCCESS != m_pCall->initialize(CPP_DOC_PROVIDER, NORMAL_CHANNEL)) return pReturn;
		m_pCall->setTransportProperty(SOAPACTION_HEADER , "testXSDANY#query");
	m_pCall->setSOAPVersion(SOAP_VER_1_1);
	m_pCall->setOperation("query", "urn:ExtensibilityQuery");
	applyUserPreferences();
	m_pCall->addAnyObject(Value0);
	if (AXIS_SUCCESS == m_pCall->invoke())
	{
		if(AXIS_SUCCESS == m_pCall->checkMessage("queryResponse", "urn:ExtensibilityQuery"))
		{
			pReturn = (AnyType*)m_pCall->getAnyObject();
		}
	}
	m_pCall->unInitialize();
	return pReturn;
	}
	catch(AxisException& e)
	{
		int iExceptionCode = e.getExceptionCode();
		if(AXISC_NODE_VALUE_MISMATCH_EXCEPTION != iExceptionCode)
		{
			throw;
		}
                ISoapFault* pSoapFault = (ISoapFault*) m_pCall->checkFault("Fault",
		    "http://localhost:8080/axis/ExtensibilityQuery");
		if(pSoapFault)
                {   
		    m_pCall->unInitialize();
                    throw AxisClientException(pSoapFault);     
                }
		else throw;
	}
}

