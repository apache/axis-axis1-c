// Copyright 2003-2006 The Apache Software Foundation.
// (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * This file was auto-generated by the Axis C++ Web Service Generator (WSDL2Ws)
 * This file contains definitions of the web service
 */

#include "FourLevelTestDocInterface.hpp"


FourLevelTestDocInterface::FourLevelTestDocInterface()
{
}

FourLevelTestDocInterface::~FourLevelTestDocInterface()
{
}

/* This function is called by the AxisEngine when something went wrong
 with the current web service request processing. Appropriate actions should
 be taken here.*/
void FourLevelTestDocInterface::onFault()
{
}

SecondLevelElemType_Array * FourLevelTestDocInterface::RetrieveTestDoc(SecondLevelElemType_Array * Value0)  
{
    if (Value0)
    {
        int size = 0;
        SecondLevelElemType ** arrayOfSecondLevelElemType = Value0->get(size);
        if (size > 0)
        {
            ThirdLevelElemType_Array * thirdArray =
                arrayOfSecondLevelElemType[0]->getThirdLevelElem();
            ThirdLevelElemType ** arrayOfThirdLevelElemType =
                thirdArray->get(size);
            if (size > 0)
            {
                FourthLevelElemType_Array * fourthArray =
                    arrayOfThirdLevelElemType[0]->getFourthLevelElem();
                FourthLevelElemType ** arrayOfFourthLevelElemType =
                    fourthArray->get(size);
                if (size > 0)
                {
                    char * type = arrayOfFourthLevelElemType[0]->SampleString;
                    if (type != NULL)
                    {
                        if (strcmp( type, "abc" ))
                        {
                            delete Value0;
                            throw AxisServiceException(33);
                        }
                    }
                }
            }
        }
        delete Value0;
    }

    FourthLevelElemType ** arrayOfFourthLevelElemType = new FourthLevelElemType * [1];
    arrayOfFourthLevelElemType[0] = new FourthLevelElemType();
    arrayOfFourthLevelElemType[0]->setSampleString("def");
    arrayOfFourthLevelElemType[0]->setSampleInt(1);

    FourthLevelElemType_Array * fourthArray = new FourthLevelElemType_Array();
    fourthArray->set(arrayOfFourthLevelElemType, 1);

    delete arrayOfFourthLevelElemType[0];
    delete [] arrayOfFourthLevelElemType;

    ThirdLevelElemType ** arrayOfThirdLevelElemType = new ThirdLevelElemType * [1];
    arrayOfThirdLevelElemType[0] = new ThirdLevelElemType();
    arrayOfThirdLevelElemType[0]->setFourthLevelElem(fourthArray);

    delete fourthArray;

    ThirdLevelElemType_Array * thirdArray = new ThirdLevelElemType_Array();
    thirdArray->set(arrayOfThirdLevelElemType, 1);

    delete arrayOfThirdLevelElemType[0];
    delete [] arrayOfThirdLevelElemType;

    SecondLevelElemType ** arrayOfSecondLevelElemType = new SecondLevelElemType * [1];
    arrayOfSecondLevelElemType[0] = new SecondLevelElemType();
    arrayOfSecondLevelElemType[0]->setThirdLevelElem(thirdArray);

    delete thirdArray;

    SecondLevelElemType_Array * secondArray = new SecondLevelElemType_Array();
    secondArray->set(arrayOfSecondLevelElemType, 1);

    delete arrayOfSecondLevelElemType[0];
    delete [] arrayOfSecondLevelElemType;

    return secondArray;
}
