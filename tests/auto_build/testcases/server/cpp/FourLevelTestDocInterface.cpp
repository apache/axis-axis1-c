/*
 * This file was auto-generated by the Axis C++ Web Service Generator (WSDL2Ws)
 * This file contains definitions of the web service
 */

#include "FourLevelTestDocInterface.hpp"


FourLevelTestDocInterface::FourLevelTestDocInterface()
{
}

FourLevelTestDocInterface::~FourLevelTestDocInterface()
{
}

/* This function is called by the AxisEngine when something went wrong
 with the current web service request processing. Appropriate actions should
 be taken here.*/
void FourLevelTestDocInterface::onFault()
{
}
/* This function is called by the AxisEngine when this web service
 library is first loaded. So here we can initialize any global/static
 data structures of this web service or open database connections */
void FourLevelTestDocInterface::init()
{
}
/* This function is called by the AxisEngine when this web service
 library is unloaded. So we can deallocate any global/static data structures
 and close database connections etc here. */
void FourLevelTestDocInterface::fini()
{
}
SecondLevelElemType_Array FourLevelTestDocInterface::RetrieveTestDoc(SecondLevelElemType_Array Value0)  
{
	//if (NULL == Value0) 
	//	return 0;

	char* type = Value0.m_Array[0].ThirdLevelElem.m_Array[0].FourthLevelElem.m_Array[0].SampleString;
	if (type != NULL) {
		if (strcmp(type, "abc")) {
			throw new AxisServiceException(33);
		}
	}

	FourthLevelElemType* fourth = new FourthLevelElemType();
	fourth->SampleString = strdup("def");
	fourth->SampleInt = 1;

	FourthLevelElemType_Array* fourth_array = new FourthLevelElemType_Array();
	fourth_array->m_Array = fourth;
	fourth_array->m_Size = 1;

	ThirdLevelElemType* third = new ThirdLevelElemType();
	third->FourthLevelElem = *fourth_array;

	ThirdLevelElemType_Array* third_array = new ThirdLevelElemType_Array();
	third_array->m_Array = third;
	third_array->m_Size = 1;

	SecondLevelElemType* second = new SecondLevelElemType();
	second->ThirdLevelElem = *third_array;

	SecondLevelElemType_Array* second_array = new SecondLevelElemType_Array();
	second_array->m_Array = second;
	second_array->m_Size = 1;

	return *second_array;
}
