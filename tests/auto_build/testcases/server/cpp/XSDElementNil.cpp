/*
 * Copyright 2003-2004 The Apache Software Foundation.

 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file was auto-generated by the Axis C++ Web Service Generator (WSDL2Ws)
 * This file contains definitions of the web service
 */

#include "XSDElementNil.hpp"


XSDElementNil::XSDElementNil()
{
}

XSDElementNil::~XSDElementNil()
{
}

/* This function is called by the AxisEngine when something went wrong
 with the current web service request processing. Appropriate actions should
 be taken here.*/
void XSDElementNil::onFault()
{
}
/* This function is called by the AxisEngine when this web service
 library is first loaded. So here we can initialize any global/static
 data structures of this web service or open database connections */
void XSDElementNil::init()
{
}
/* This function is called by the AxisEngine when this web service
 library is unloaded. So we can deallocate any global/static data structures
 and close database connections etc here. */
void XSDElementNil::fini()
{
}
xsd__int * XSDElementNil::setGetDataInt(xsd__int * Value0)  
{
	return Value0;
}
xsd__unsignedInt * XSDElementNil::setGetDataUnsignedInt(xsd__unsignedInt * Value0)  
{
	return Value0;
}
xsd__long * XSDElementNil::setGetDataLong(xsd__long * Value0)  
{
	return Value0;
}
xsd__unsignedLong * XSDElementNil::setGetDataUnsignedLong(xsd__unsignedLong * Value0)  
{
	return Value0;
}
xsd__double * XSDElementNil::setGetDataDouble(xsd__double * Value0)  
{
	return Value0;
}
xsd__float * XSDElementNil::setGetDataFloat(xsd__float * Value0)  
{
	return Value0;
}
xsd__byte * XSDElementNil::setGetDataByte(xsd__byte * Value0)  
{
	return Value0;
}
xsd__unsignedByte * XSDElementNil::setGetDataUnsignedByte(xsd__unsignedByte * Value0)  
{
	return Value0;
}
xsd__boolean * XSDElementNil::setGetDataBoolean(xsd__boolean * Value0)  
{
	return Value0;
}
xsd__string XSDElementNil::setGetDataString(xsd__string Value0)  
{
	return Value0;
}
xsd__short * XSDElementNil::setGetDataShort(xsd__short * Value0)  
{
	return Value0;
}
xsd__unsignedShort * XSDElementNil::setGetDataUnsignedShort(xsd__unsignedShort * Value0)  
{
	return Value0;
}
xsd__dateTime * XSDElementNil::setGetDateTimeType(xsd__dateTime * Value0)  
{
	return Value0;
}
xsd__date * XSDElementNil::setGetDateType(xsd__date * Value0)  
{
	return Value0;
}
xsd__duration * XSDElementNil::setGetDataDurationType(xsd__duration * Value0)  
{
	return Value0;
}
xsd__time * XSDElementNil::setGetTimeType(xsd__time * Value0)  
{
	return Value0;
}
xsd__base64Binary * XSDElementNil::setGetBase64BinaryType(xsd__base64Binary * Value0)  
{
	return Value0;
}
xsd__hexBinary * XSDElementNil::setGetHexBinary(xsd__hexBinary * Value0)  
{
	return Value0;
}
xsd__decimal * XSDElementNil::setGetDecimalType(xsd__decimal * Value0)  
{
	return Value0;
}
xsd__integer * XSDElementNil::setGetIntegerType(xsd__integer * Value0)  
{
	return Value0;
}
void XSDElementNil::setQNameType(xsd__QName Value0)  
{
}
xsd__QName XSDElementNil::getQNameType()  
{
	return NULL;
}
void XSDElementNil::setAnyURIType(xsd__anyURI Value0)  
{
}
xsd__anyURI XSDElementNil::getAnyURIType()  
{
	return NULL;
}
