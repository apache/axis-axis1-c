package org.apache.geronimo.ews.ws4j2ee.toWs.ejb;

import org.apache.geronimo.ews.ws4j2ee.context.J2EEWebServiceContext;
import org.apache.geronimo.ews.ws4j2ee.toWs.GenerationFault;
import org.apache.geronimo.ews.ws4j2ee.toWs.JavaInterfaceWriter;

/**
 * This class can be used to write the appropriate EJB Home interface
 * class for the given port type.
 * 
 * @author Rajith Priyanga
 * @author Srinath Perera
 * @date Nov 26, 2003
 */
public class EJBHomeWriter extends JavaInterfaceWriter {
    private String name;

    /**
     * Constructs a EJBHomeWriter.
     * 
     * @param portType The port type which contains the details.
     * @throws GenerationFault 
     */
    public EJBHomeWriter(J2EEWebServiceContext context) throws GenerationFault {
        super(context, context.getMiscInfo().getEjbhome());
    }

    /**
     * Returns the complete file name of the source code file which is
     * generated by the writer.
     */
    public String getFileName() {
        name = j2eewscontext.getMiscInfo().getEjbhome();
        String outdir = j2eewscontext.getMiscInfo().getOutPutPath();
        if (!outdir.endsWith("/"))
            outdir = outdir + "/";

        return outdir + "ejb/" + name.replace('.', '/') + ".java";
    }

    protected void writeAttributes() throws GenerationFault {
    }

    protected void writeMethods() throws GenerationFault {
        out.write("\tpublic " + j2eewscontext.getMiscInfo().getEjbsei() + " create()throws java.rmi.RemoteException,javax.ejb.CreateException;\n");
    }

    protected String getExtendsPart() {
        return " extends javax.ejb.EJBHome";
    }

}
