package org.apache.axismora.wsdl2ws.cpp;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;

import org.apache.axismora.wsdl2ws.SourceWriter;
import org.apache.axismora.wsdl2ws.WrapperFault;
import org.apache.axismora.wsdl2ws.WrapperUtils;
import org.apache.axismora.wsdl2ws.info.WebServiceContext;

/**
 * @author Srinath Perera(hemapani@openource.lk)
 */
public class ClassLoader implements SourceWriter{
	private Writer writer;
	private WebServiceContext wscontext;
	private String classname;
	public ClassLoader(WebServiceContext wscontext) throws WrapperFault {
		this.wscontext = wscontext;
		this.classname = WrapperUtils.getClassNameFromFullyQualifiedName(wscontext.getSerInfo().getQualifiedServiceName());
	}

	public void writeSource() throws WrapperFault {
		String wrappername = classname + CPPUtils.WRAPPER_NAME_APPENDER;
	try{	
	  this.writer = new BufferedWriter(new FileWriter(getFilePath(), false));
		
	  writer.write("//		This file is automatically generated by the Axis C++ Wrapper Class Generator\n");
	  writer.write("//		Service file containing the two export functions of the Web service Library\n");
	  writer.write("#ifdef WIN32\n");
	  writer.write("#define STORAGE_CLASS_INFO __declspec(dllexport)\n");
	  writer.write("#else\n");
	  writer.write("#define STORAGE_CLASS_INFO \n");
	  writer.write("#endif\n");

	  writer.write("#include \""+wrappername+".h\" \n");

	  writer.write("extern \"C\" {\n");

	  writer.write("STORAGE_CLASS_INFO\n");
	  writer.write("int GetClassInstance(BasicHandler **inst)\n");
	  writer.write("{\n");
	  writer.write("\tWrapperClassHandler* pWCH = new "+wrappername+"();\n");
	  writer.write("\tif (pWCH)\n");
	  writer.write("\t{\n");
	  writer.write("\t\tpWCH->Init();\n");
	  writer.write("\t\t*inst = pWCH;\n");
	  writer.write("\t\treturn SUCCESS;\n");
	  writer.write("\t}\n");
	  writer.write("\treturn FAIL;\n");
	  writer.write("}\n");
	  writer.write("STORAGE_CLASS_INFO \n");
	  writer.write("int DestroyInstance(BasicHandler *inst)\n");
	  writer.write("{\n");
	  writer.write("\tif (inst)\n"); 
	  writer.write("\t{\n");
	  writer.write("\t\tWrapperClassHandler* pWCH = static_cast<WrapperClassHandler*>(inst);\n");
	  writer.write("\t\tpWCH->Fini();\n");
	  writer.write("\t\tdelete pWCH;\n");
	  writer.write("\t\treturn SUCCESS;\n");
	  writer.write("\t}\n");
	  writer.write("\treturn FAIL;\n");
	  writer.write("}\n");
	  writer.write("}\n");
	  writer.flush();
	  writer.close();
	 }catch(IOException e){
		throw new WrapperFault(e);
	 }
	}

	protected File getFilePath() throws WrapperFault {
		String targetOutputLocation = this.wscontext.getWrapInfo().getTargetOutputLocation();
		if(targetOutputLocation.endsWith("/"))
			targetOutputLocation = targetOutputLocation.substring(0, targetOutputLocation.length() - 1);
		new File(targetOutputLocation).mkdirs();
		String fileName = targetOutputLocation + "/" + classname + CPPUtils.CLASS_LODER_APPENDER + ".cpp";
		return new File(fileName);
	}

}
