<!-- ****************************************************************** -->
<!--                                                                    -->
<!--  Module Name: %W%                                                  -->
<!--                                                                    -->
<!--  Description:                                                      -->
<!--                                                                    -->
<!--  IBM Confidential                                                  -->
<!--                                                                    -->
<!--  OCO Source Materials                                              -->
<!--                                                                    -->
<!--  5724-M08                                                          -->
<!--  (c) Copyright IBM Corp. 2004, 2005                                -->
<!--                                                                    -->
<!--  The source code for this program is not published or other-       -->
<!--  wise divested of its trade secrets, irrespective of what has      -->
<!--  been deposited with the U.S. Copyright Office.                    -->
<!--                                                                    -->
<!--                                                                    -->
<!--  Version: %Z% %W% %I% %E% %U%                                      -->
<!--                                                                    -->
<!-- ****************************************************************** -->

<project name="Build the Axis web pages" default="help" basedir="../../site">
 <description>
NOTES
=====
Before running this script, the following prereqisties are required:-
* The environment variable JAVA_HOME has been set.
* The environment variable FORREST_HOME has been set (this also assumes that
  FORREST has also been downloaded and built and that FORREST_HOME/bin has
  been added to the path environment variable).
* Logged onto CVS using putty or some other SSH connection (If you have not,
  or your connection has timed out, you will get the following error:-
  "connect to localhost:2401 failed: No connection could be made because the
  target machine actively refused it.").
* This script will not work unless the ws-axis/site directory already exists.
  If ws-axis/site does not exist, run the extractPages.xml script using the
  same parameters as this script.

Command Line Syntax
===================
ant -f buildPages.xml -DuserId=[User Id used to logon to current CVS session] -Dpassword=[password for CVS user Id] [Target Name]

e.g.
ant -f buildPages.xml -DuserId=bloggsf -Dpassword=Pa5sw6rd extractSite
ant -f buildPages.xml -DuserId=bloggsj -Dpassword=P4s5w0rd buildSite

 </description>

<!-- * Include environment variables and the ant extensions in 'antcontrib'.
 -->
 <property name="env" value="env" environment="env"/>
 <taskdef resource="net/sf/antcontrib/antlib.xml"/>

<!-- * Read the version number from ws-axis/c/build/version.properties file.
-->
 <property file="${basedir}/../c/build/version.properties"/>

<!-- * Set the script property values.
-->
 <property name="ws-site.dir.download" value="${basedir}/../.."/>
 <property name="ws-site.dir.upload"   value="${basedir}/../../ws-site/targets/axis/cpp"/>
 <property name="ws-site.packageName"  value="ws-site"/>
 <property name="site.dir.download"    value="${basedir}/../.."/>
 <property name="site.dir.upload"      value="${basedir}/src/cpp"/>
 <property name="site.packageName"     value="ws-axis/site"/>
 <property name="dollar"               value="$"/>
 <property name="myJava.home"          value="${dollar}{env.JAVA_HOME}"/>
 <property name="forrest.home"         value="${dollar}{env.FORREST_HOME}"/>
 <property name="commit.message"       value="&quot;Pages updated for release ${version}&quot;"/>
 <property name="default.userId"       value="${dollar}{userId}"/>
 <property name="default.password"     value="${dollar}{password}"/>

<!-- * Check if ws-axis/site/build.xml exists.  If it does not, then only
     * 'extractSite'can be run as 'buildSite' requires functions that are only
     * available in this script.
 -->
 <if> <available file="${basedir}/src/cpp/build.xml" property="Options" value="extractSite buildSite"/>
  <then>
   <import file="${basedir}/src/cpp/build.xml"/>
   <property name="Options" value="extractSite buildSite"/>
  </then>
  <else>
   <echo message="Warning: build.xml not found - Can only run 'extractSite' target."/>
   <property name="Options" value="extractSite"/>
  </else>
 </if>

<!-- ******************************************************************************************************************
     * This is the default target.  It describes how to get project help.                                             *
     ******************************************************************************************************************
 -->
 <target name="help">
  <echo message="For help, type 'ant -f buildPages.xml -projecthelp'"/>
 </target>

<!-- ******************************************************************************************************************
     * Extract all of the files required to build the AXIS web site pages from CVS.  Unfortunately, you have extract  *
     * the complete ws-site project which takes about 55 minutes to download.                                         *
     ******************************************************************************************************************
 -->
 <target name="extractSite" description="Extract ws-axis/site and ws-site from CVS">
  <if> <equals arg1="${userId}" arg2="${default.userId}"/>
   <then>
    <echo message="Error: userId has not been defined."/>
   </then>
   <else>
    <if> <equals arg1="${password}" arg2="${default.password}"/>
     <then>
      <echo message="Warning: password has not been defined."/>
     </then>
     <else>
      <cvspass cvsroot=":ssh:${userId}@cvs.apache.org:/home/cvs" password="${password}"/>
     </else>
    </if>

    <delete dir="${site.dir.download}/${site.packageName}"/>
    <echo message="Warning: ${site.packageName} will take between 5 and 10 minutes to extract from CVS!"/>
    <echo message="About to download ${site.packageName} to ${site.dir.download}"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="checkout"
         package="${site.packageName}"
         dest="${site.dir.download}"
         reallyquiet="true"/>

    <delete dir="${ws-site.dir.download}/${ws-site.packageName}"/>
    <echo message="Warning: ${ws-site.packageName} will take between 50 and 70 minutes to extract from CVS!"/>
    <echo message="About to download ${ws-site.packageName} to ${ws-site.dir.download}"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="checkout"
         package="${ws-site.packageName}"
         dest="${ws-site.dir.download}"
         reallyquiet="true"/>
   </else>
  </if>
 </target>

<!-- ******************************************************************************************************************
     * This target assumes that the ws-site and site have been extracted from CVS and you have made whatever updates  *
     * are required to the ihtml pages.                                                                               *
     * The prereqs for running this script are as follows:-                                                           *
     * 1. build.xml exists in ws-axis/site.                                                                           *
     * 2. The environment variable JAVA_HOME has been set.                                                            *
     * 3. The environment variable FORREST_HOME has been set (this also assumes that FORREST has also been downloaded *
     *    and built and that FORREST_HOME/bin has been added to the path environment variable.                        *
     ******************************************************************************************************************
 -->
 <target name="buildSite" description="Builds the documentation.  Should be used after 'extractSite' to build the AXIS documentation.">
  <if> <contains string="${Options}" substring="buildSite" casesensitive="false"/>
   <then>
    <if> <equals arg1="${env.JAVA_HOME}" arg2="${myJava.home}"/>
     <then>
      <echo message="The environment variable JAVA_HOME has not been set."/>
     </then>
     <else>
      <if> <equals arg1="${env.FORREST_HOME}" arg2="${forrest.home}"/>
       <then>
        <echo message="The environment variable FORREST_HOME has not been set."/>
       </then>
       <else>
        <for list="${env.Path}" param="path" delimiter=";">
         <sequential>
          <if> <contains string="@{path}" substring="${env.FORREST_HOME}" casesensitive="false"/>
           <then>
            <property name="FoundForrestHomeInPath" value="true"/>
           </then>
          </if>
         </sequential>
        </for>

        <if> <equals arg1="${FoundForrestHomeInPath}" arg2="true"/>
         <then>
          <antcall target="clean"/>
          <antcall target="forrest"/>
          <move file="${basedir}/build/tmp" tofile="${basedir}/build/site"/>
          <antcall target="replace"/>
         </then>
         <else>
          <echo message="FORREST_HOME was not found in the path environment varable."/>
         </else>
        </if>
       </else>
      </if>
     </else>
    </if>
   </then>
   <else>
    <echo message="Error: There is no valid download available [${Options} substring=buildSite]."/>
   </else>
  </if>
 </target>

<!-- ******************************************************************************************************************
     * Once the site has been built, it needs to be put back into CVS.  There are two directory structures that need  *
     * to be returned, these are:-                                                                                    *
     * 1. ws-axis/site/src and                                                                                        *
     * 2. ws-site/targets/axis                                                                                         *
     ******************************************************************************************************************
 -->
 <target name="returnSiteToCVS" description="Copy the built pages (from previously running 'buildSite') back to CVS">
  <if> <equals arg1="${userId}" arg2="${default.userId}"/>
   <then>
    <echo message="Error: userId has not been defined."/>
   </then>
   <else>
    <if> <equals arg1="${password}" arg2="${default.password}"/>
     <then>
      <echo message="Warning: password has not been defined."/>
     </then>
     <else>
      <cvspass cvsroot=":ssh:${userId}@cvs.apache.org:/home/cvs" password="${password}"/>
     </else>
    </if>
    <echo message="About to upload ${site.dir.upload} back to ${site.packageName}."/>
    <echo message="Commit message is: ${commit.message}"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="update -P"
         dest="${site.dir.upload}"
         reallyquiet="true"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="commit -m ${commit.message}"
         dest="${site.dir.upload}"
         reallyquiet="true"/>
    <echo message="About to upload ${ws-site.dir.upload} back to ${ws-site.packageName}"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="update -P"
         dest="${ws-site.dir.upload}"
         reallyquiet="true"/>
    <cvs cvsRoot=":ssh:${userId}@cvs.apache.org:/home/cvs"
         command="commit -m ${commit.message}"
         dest="${ws-site.dir.upload}"
         reallyquiet="true"/>
   </else>
  </if>
 </target>

</project>